
# log4j2
logging: 
  config: classpath:log4j2-spring.xml

# server
server: 
  port: 8082
  servlet: 
    context-path: /
    session.timeout: 0
  tomcat: 
    uri-encoding: UTF-8
    accept-count: 512
    min-spare-threads: 10
    max-connections: 10000
    max-threads: 500
    accesslog: 
      enabled: true
      buffered: true
      directory: /usr/local/logs/two
      file-date-format: .yyyy-MM-dd
      pattern: common
      prefix: access_log
      request-attributes-enabled: true
      rotate: true
      suffix: .log
      background-processor-delay: 10s

# springboot
spring: 
  application: 
    name: mrh-seata-service-two
  profiles: 
    active: default
  mvc: 
    date-format: 'yyyy-MM-dd HH:mm:ss'
    servlet.load-on-startup: 1
    throw-exception-if-no-handler-found: true
  resources: 
    add-mappings: false
  jackson: 
    date-format: 'yyyy-MM-dd HH:mm:ss'
    joda-date-time-format: 'yyyy-MM-dd HH:mm:ss'
    time-zone: 'GMT+8'
  datasource: 
    url: 'jdbc:mysql://192.168.140.210:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8'
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    dbcp2: 
      max-active: 100
      initial-size: 2
      max-idle: 50
      max-wait: 60000
      validation-query: select 1
      test-while-idle: true
      test-on-borrow: false
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 1800000
      remove-abandoned: true
      remove-abandoned-timeout: 180

# mybatis
mybatis: 
  mapper-locations: classpath:org/lushen/mrh/example/seata/dao/mapping/*.xml
  type-aliases-package: org.lushen.mrh.example.seata.dao.model
  type-handlers-package: org.lushen.mrh.example.seata.dao.handler

# springcloud
spring.cloud: 
  zookeeper: 
    enabled: true
    connect-string: 192.168.140.210:2181,192.168.140.211:2181,192.168.140.212:2181
    max-retries: 10
    max-sleep-ms: 1000
    discovery: 
      enabled: true
      register: true
      root: /seata
feign: 
  client: 
    config: 
      default: 
        connectTimeout: 5000
        readTimeout: 30000
  compression: 
    request: 
      enabled: true
      mime-types: application/json
      min-request-size: 1024
    response:
      enabled: true

# seata
seata: 
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: seata-tx-service-group
  enable-auto-data-source-proxy: true
  use-jdk-proxy: false
  transport: 
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: true
  service:
    vgroup-mapping: 
      seata-tx-service-group: default
    grouplist: 
      default: 192.168.140.210:8091
    enable-degrade: false
    disable-global-transaction: false
  registry: 
    type: zk
    zk: 
      cluster: default
      server-addr: 192.168.140.210:2181,192.168.140.211:2181,192.168.140.212:2181
      session-timeout: 6000
      connect-timeout: 20000
  config: 
    type: zk
    zk: 
      cluster: default
      server-addr: 192.168.140.210:2181,192.168.140.211:2181,192.168.140.212:2181
      session-timeout: 6000
      connect-timeout: 20000
  client: 
    log: 
      exception-rate: 100
    rm: 
      lock: 
        retry-interval: 10
        retry-times: 30
        retry-policy-branch-rollback-on-conflict: true
      async-commit-buffer-limit: 10000
      report-retry-count: 5
      table-meta-check-enable: false
      report-success-enable: false
      saga-branch-register-enable: false
    tm: 
      degrade-check: false
      degrade-check-allow-times: 10
      degrade-check-period: 2000
      commit-retry-count: 5
      rollback-retry-count: 5
    undo: 
      data-validation: true
      log-serialization: jackson
      log-table: undo_log


